global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend HTTPS
mode http
bind *:80
bind *:443 ssl crt /etc/haproxy/{{ domain }}.crt
stats enable
stats uri /stats
stats refresh 10s
http-request add-header X-Forwarded-Proto https
http-request add-header X-Forwarded-Port 443
redirect scheme https if !{ ssl_fc }
option forwardfor

acl prometheus hdr_sub(host) -i prometheus.{{ domain }}
acl alertmanager hdr_sub(host) -i alertmanager.{{ domain }}
acl chatops_sub hdr_sub(host) -i chatops.{{ domain }}
acl kibana hdr_sub(host) -i kibana.{{ domain }}
acl chatops hdr_sub(host) -i {{ domain }}

use_backend PROMETHEUS if prometheus
use_backend KIBANA if kibana
use_backend ALERTMANAGER if alertmanager
use_backend CHATOPS if chatops || chatops_sub

frontend PROMETHEUS
  bind *:8405
  mode http
  http-request use-service prometheus-exporter if { path /metrics }
  no log

backend PROMETHEUS
balance source
server prometheus localhost:9090 check ssl verify required ca-file /etc/haproxy/ssl/prometheus.crt

backend ALERTMANAGER
server alertmanager localhost:9093 check ssl verify required ca-file /etc/haproxy/ssl/alertmanager.crt

backend CHATOPS
server chatops_0 localhost:3030 check
server chatops_1 localhost:3031 check
server chatops_2 localhost:3032 check backup

backend KIBANA
server kibana localhost:5601 check ssl verify required ca-file /etc/haproxy/ssl/kibana.crt
