---
- name: Check clouds.yaml and fail if it does not exist
  block:
    - name: Check clouds.yaml
      ansible.builtin.stat:
        path: "~/.config/openstack/clouds.yaml"
      register: terraform_clouds_yaml_state

    - name: Fail if clouds.yaml does not exist
      ansible.builtin.fail:
        msg: "Could not find a clouds.yaml in ~/.config/openstack/clouds.yaml"
      when: not terraform_clouds_yaml_state.stat.exists

- name: Check public and private keys
  block:
    # We can ignore this warning as this command doesn't change anything when it runs.
    - name: Check Bastion public key is valid # noqa: no-changed-when
      ansible.builtin.command: "ssh-keygen -l -f '../terraform/{{ env }}-bastion-key.pub'"
      ignore_errors: true
      register: terraform_public_key_state

    # We can ignore this warning as this command doesn't change anything when it runs.
    - name: Check Bastion private key is valid # noqa: no-changed-when
      ansible.builtin.command: "ssh-keygen -l -f '../ansible/{{ env }}-bastion-key'"
      ignore_errors: true
      register: terraform_private_key_state

    - name: Generate an SSH key pair and copy to directories
      when: terraform_public_key_state.rc != 0 or terraform_private_key_state.rc != 0
      block:
        - name: Generate key
          community.crypto.openssh_keypair:
            path: "/tmp/{{ env }}-bastion-key"
            force: true
            passphrase: "{{ bastion_key_passphrase }}"
            size: 4096
            type: rsa
            owner: "{{ ansible_env.USER }}"
            group: "{{ ansible_env.USER }}"
            mode: "0700"

        - name: Move private key
          ansible.builtin.copy:
            src: "/tmp/{{ env }}-bastion-key"
            dest: "./{{ env }}-bastion-key"
            owner: "{{ ansible_env.USER }}"
            group: "{{ ansible_env.USER }}"
            mode: "0700"

        - name: Move public key
          ansible.builtin.copy:
            src: "/tmp/{{ env }}-bastion-key.pub"
            dest: "../terraform/{{ env }}-bastion-key.pub"
            owner: "{{ ansible_env.USER }}"
            group: "{{ ansible_env.USER }}"
            mode: "0774"

        - name: Delete keys in /tmp
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "/tmp/{{ env }}-bastion-key"
            - "/tmp/{{ env }}-bastion-key.pub"

- name: Install Terraform
  community.general.snap:
    name: terraform
    classic: true

- name: Create terraform variables file
  ansible.builtin.template:
    src: terraform.tfvars.j2
    dest: "{{ playbook_dir }}/../terraform/terraform.tfvars"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: "0774"

- name: Deploy infrastructure
  community.general.terraform:
    project_path: "../terraform"
    state: present
    force_init: true
    workspace: "{{ env }}"
  register: terraform_output
