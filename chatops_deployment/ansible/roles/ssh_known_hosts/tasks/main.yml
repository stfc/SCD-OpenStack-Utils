---
- name: Refresh inventory to grab latest changes
  ansible.builtin.meta: refresh_inventory

- name: Add ssh key to agent
  block:
    - name: Install expect
      become: true
      ansible.builtin.apt:
        name: expect
        update_cache: true

    - name: Add key to ssh-agent
      # noqa: command-instead-of-shell
      # We must use shell here as here-docs don't work with command
      ansible.builtin.shell: |
        expect << EOF
          spawn ssh-add bastion-key
          expect "Enter passphrase for bastion-key:"
          send "{{ bastion_key_passphrase }}\r"
          expect eof
        EOF
      register: _
      changed_when: _.rc == 0

- name: Remove FIP from known hosts
  ansible.builtin.known_hosts:
    name: "{{ terraform_floating_ip }}"
    state: absent

- name: Remove private VM IPs from known hosts
  ansible.builtin.known_hosts:
    name: "{{ item }}"
    state: absent
  loop: "{{ groups['private'] }}"

- name: Wait for VMs to be ready
  ansible.builtin.wait_for:
    timeout: 10

- name: Add FIP fingerprint to known hosts
  ansible.builtin.known_hosts:
    name: "{{ terraform_floating_ip }}"
    state: present
    key: "{{ lookup('ansible.builtin.pipe', 'ssh-keyscan {{ terraform_floating_ip }}') }}"

- name: Get private VMs' fingerprints and retrieve to local host
  delegate_to: "{{ terraform_floating_ip }}"
  block:
    - name: Add private VMs' fingerprints to known hosts on LB
      # noqa: command-instead-of-shell
      # We can't use the known_hosts module here as lookups cannot be delegated
      # We can't use command as it doesn't support here-docs
      ansible.builtin.shell: 'ssh-keyscan "{{ item }}" >> /tmp/known_hosts'
      loop: "{{ groups['private'] }}"
      register: _
      changed_when: _.rc == 0

    - name: Retrieve known hosts from LB
      ansible.builtin.fetch:
        src: "/tmp/known_hosts"
        dest: "private_vm_known_hosts.tmp"
        flat: true
      register: _
      changed_when: _.failed != false

    - name: Remove temporary known_hosts to ensure it's clean each run
      ansible.builtin.file:
        path: "/tmp/known_hosts"
        state: absent
      register: _
      changed_when: _.failed != false

- name: Append fetched known hosts to the local known hosts
  ansible.builtin.lineinfile:
    path: "~/.ssh/known_hosts"
    line: "{{ item }}"
    state: present
  loop: "{{ lookup('ansible.builtin.file', 'private_vm_known_hosts.tmp').splitlines() }}"

- name: Remove private_known_hosts.tmp
  ansible.builtin.file:
    path: "private_vm_known_hosts.tmp"
    state: absent
  register: _
  changed_when: _.failed != false
