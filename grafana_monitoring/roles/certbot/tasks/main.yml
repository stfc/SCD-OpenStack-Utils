---
- name: Install prerequisite packages
  become: true
  ansible.builtin.apt:
    pkg:
      - python3-venv
      - libaugeas0
    update_cache: true

- name: Install certbot
  become: true
  ansible.builtin.pip:
    name: certbot
    virtualenv: /opt/certbot
    virtualenv_command: python3 -m venv

- name: Create a symbolic link for certbot
  become: true
  ansible.builtin.file:
    src: /opt/certbot/bin/certbot
    dest: /usr/bin/certbot
    owner: root
    group: root
    state: link

- name: Stop HAProxy
  become: true
  ansible.builtin.systemd_service:
    state: stopped
    name: haproxy.service

- name: Check if certificate exists
  become: true
  ansible.builtin.stat:
    path: /etc/haproxy/{{ inventory_hostname }}.crt
  register: certificate_file

- name: Generate the certificate for the first time
  become: true
  ansible.builtin.shell: "certbot certonly --standalone --non-interactive --agree-tos --domains {{ inventory_hostname }} -m cloud-support@stfc.ac.uk"
  when: not certificate_file.stat.exists

- name: Copy certificate for the first time
  become: true
  ansible.builtin.shell: "cat /etc/letsencrypt/live/{{ inventory_hostname }}/privkey.pem /etc/letsencrypt/live/{{ inventory_hostname }}/fullchain.pem > /etc/haproxy/{{ inventory_hostname }}.crt"
  when: not certificate_file.stat.exists

- name: Restart HAProxy
  become: true
  ansible.builtin.systemd_service:
    state: restarted
    name: haproxy.service

- name: Template renew script to host
  become: true
  ansible.builtin.template:
    src: renew_certs.sh.j2
    dest: /usr/local/sbin/renew_certs.sh
    mode: "0554"
    owner: root
    group: root

- name: Create a cron job for the renewal of certificates
  become: true
  become_user: root
  ansible.builtin.cron:
    name: "Renew Let's Encrypt certificates"
    minute: "0"
    hour: "0,12"
    day: "*"
    job: "/usr/local/sbin/renew_certs.sh"
